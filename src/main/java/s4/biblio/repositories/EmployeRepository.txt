package s4.biblio.repositories;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import s4.biblio.models.Departement;
import s4.biblio.models.Employe;
import s4.biblio.models.Sexe;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

@Repository
public interface EmployeRepository extends JpaRepository<Employe, Long> {

    Optional<Employe> findByEmail(String email);

    List<Employe> findByActif(Boolean actif);

    @Query("SELECT e FROM Employe e WHERE e.role.id = :roleId")
    List<Employe> findByRoleId(@Param("roleId") Long roleId);

    @Query("SELECT e FROM Employe e WHERE e.dateRenvoie IS NULL")
    List<Employe> findActiveEmployees();

    @Query("SELECT e FROM Employe e WHERE " +
            "(:nom IS NULL OR e.nom LIKE %:nom% OR e.prenom LIKE %:nom%) AND " +
            "(:debut IS NULL OR e.dateEmbauche >= :debut) AND " +
            "(:fin IS NULL OR e.dateEmbauche <= :fin) AND " +
            "(:sexe IS NULL OR e.sexe = :sexe) AND " +
            "(:departement IS NULL OR e.role.departement = :departement) AND " +
            "(:actif IS NULL OR e.actif = :actif)")
    List<Employe> findByCompleteFilter(
            @Param("debut") LocalDate debut,
            @Param("fin") LocalDate fin,
            @Param("nom") String nom,
            @Param("sexe") Sexe sexe,
            @Param("departement") Departement departement,
            @Param("actif") Boolean actif);
}